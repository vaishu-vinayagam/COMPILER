#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main()
{
  int nst,a,n,i,j,k,nsy;
  char *loop;
  char *fp,*strt;
  char inp[40];
  printf("Enter the input string:\n");
  scanf("%[^\n]s",&inp);
  strt=inp;
  fp=inp;
  int leng=strlen(inp);
  printf("Length of string %d\n",leng);
  printf("Enter the no. of states\n");
  scanf("%d",&nst);
  int state[nst],in,ns;
  printf("Enter the states:\n");
  for(i=0;i<nst;++i)
  {
    scanf("%d",&state[i]);
  }
  printf("Enter the initial state:\n");
  scanf("%d",&in);
  int ini;
  for(i=0;i<nst;i++)
  {
    if(state[i]==in)
      ini=i;
  }
  printf("Enter the no. of final states:\n");
  scanf("%d",&n);
  int f[n];
  int final[n];
  printf("Enter the final states name:\n");
  for(i=0;i<n;i++)
  {
    scanf(" %d",&f[i]);
  }
  for(i=0;i<n;i++)
  {
    for(j=0;j<nst;j++)
    {
      if(f[i]==state[j])
      {
          final[i]=j;
      }
    }
  }
  printf("Enter the no of terminals:");
  scanf("%d",&nsy);
  char symb[nsy];
  printf("Enter the terminals:");
  for(i=0;i<nsy;i++)
  {
    scanf(" %c",&symb[i]);
  }
  int mat[nst][nsy];
  for(i=0;i<nst;i++)
  {
    for(j=0;j<nsy;j++)
    {
      printf("Enter the transition state from the state %d with input symbol %c:",state[i],symb[j]);
      scanf("%d",&mat[i][j]);
    }
  }
  for(i=0;i<nst;i++)
  {
    for(j=0;j<nsy;j++)
    {
        printf("(%d , %c ) ->  %d\n",state[i],symb[j],mat[i][j]);
    }
  }
  a=0;
  k=0;
  while(k<leng)
  {
     ns=mat[ini][((int)(*fp))-97];
     fp++;
     k++;
     while(*fp!=' ' && k<leng)
     {
        ns=mat[ns-1][((int)(*fp))-97];
        fp++;
        k++;
     }
     k++;
     a=0;
     for(i=0;i<n;i++)
     {
        if(ns-1==final[i])
        {
           a=1;
           break;
        }
     }
     if(a==1)
     {
        for(loop=strt;loop!=fp;loop++)
        {
           printf("%c",*loop);
        }
        printf(" is accepted\n");
     }
     else
     {
        for(loop=strt;loop!=fp;loop++)
        {
            printf("%c",*loop);
        }
        printf(" is not accepted\n");
     }
     if(k>leng)
     {
        break;
     }
     fp++;
     strt=fp;
   }
}
